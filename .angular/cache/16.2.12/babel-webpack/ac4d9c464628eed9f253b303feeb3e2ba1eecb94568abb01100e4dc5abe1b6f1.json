{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isAuthenticated = false;\n    this.users = [];\n    const storedUsers = localStorage.getItem('users');\n    this.users = storedUsers ? JSON.parse(storedUsers) : [];\n  }\n  register(email, password) {\n    this.users.push({\n      email,\n      password\n    });\n    localStorage.setItem('users', JSON.stringify(this.users));\n    this.isAuthenticated = true;\n    localStorage.setItem('isAuthenticated', 'true');\n  }\n  login(email, password) {\n    const storedUsers = JSON.parse(localStorage.getItem('users') || '[]');\n    const userExists = storedUsers.some(user => user.email === email && user.password === password);\n    if (userExists) {\n      this.isAuthenticated = true;\n      localStorage.setItem('isAuthenticated', 'true');\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    this.isAuthenticated = false;\n    localStorage.removeItem('isAuthenticated');\n  }\n  isLoggedIn() {\n    return localStorage.getItem('isAuthenticated') === 'true';\n  }\n  resetAuth() {\n    this.isAuthenticated = false;\n    localStorage.removeItem('isAuthenticated');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","isAuthenticated","users","storedUsers","localStorage","getItem","JSON","parse","register","email","password","push","setItem","stringify","login","userExists","some","user","logout","removeItem","isLoggedIn","resetAuth","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ayvaz\\OneDrive\\Masaüstü\\shoppingcartwithangularproject-main\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private users: { email: string; password: string }[] = [];\r\n\r\n  constructor() {\r\n    const storedUsers = localStorage.getItem('users');\r\n    this.users = storedUsers ? JSON.parse(storedUsers) : [];\r\n  }\r\n\r\n  register(email: string, password: string) {\r\n    this.users.push({ email, password });\r\n    localStorage.setItem('users', JSON.stringify(this.users));\r\n    this.isAuthenticated = true;\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n  }\r\n\r\n  login(email: string, password: string): boolean {\r\n    const storedUsers = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const userExists = storedUsers.some(\r\n      (user: any) => user.email === email && user.password === password\r\n    );\r\n\r\n    if (userExists) {\r\n      this.isAuthenticated = true;\r\n      localStorage.setItem('isAuthenticated', 'true');\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  logout() {\r\n    this.isAuthenticated = false;\r\n    localStorage.removeItem('isAuthenticated');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    return localStorage.getItem('isAuthenticated') === 'true';\r\n  }\r\n\r\n  resetAuth(): void {\r\n    this.isAuthenticated = false;\r\n    localStorage.removeItem('isAuthenticated');\r\n  }\r\n}\r\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAItBC,YAAA;IAHQ,KAAAC,eAAe,GAAG,KAAK;IACvB,KAAAC,KAAK,GAA0C,EAAE;IAGvD,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAI,CAACH,KAAK,GAAGC,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC,GAAG,EAAE;EACzD;EAEAK,QAAQA,CAACC,KAAa,EAAEC,QAAgB;IACtC,IAAI,CAACR,KAAK,CAACS,IAAI,CAAC;MAAEF,KAAK;MAAEC;IAAQ,CAAE,CAAC;IACpCN,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAEN,IAAI,CAACO,SAAS,CAAC,IAAI,CAACX,KAAK,CAAC,CAAC;IACzD,IAAI,CAACD,eAAe,GAAG,IAAI;IAC3BG,YAAY,CAACQ,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;EACjD;EAEAE,KAAKA,CAACL,KAAa,EAAEC,QAAgB;IACnC,MAAMP,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IACrE,MAAMU,UAAU,GAAGZ,WAAW,CAACa,IAAI,CAChCC,IAAS,IAAKA,IAAI,CAACR,KAAK,KAAKA,KAAK,IAAIQ,IAAI,CAACP,QAAQ,KAAKA,QAAQ,CAClE;IAED,IAAIK,UAAU,EAAE;MACd,IAAI,CAACd,eAAe,GAAG,IAAI;MAC3BG,YAAY,CAACQ,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;MAC/C,OAAO,IAAI;;IAGb,OAAO,KAAK;EACd;EAEAM,MAAMA,CAAA;IACJ,IAAI,CAACjB,eAAe,GAAG,KAAK;IAC5BG,YAAY,CAACe,UAAU,CAAC,iBAAiB,CAAC;EAC5C;EAEAC,UAAUA,CAAA;IACR,OAAOhB,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,KAAK,MAAM;EAC3D;EAEAgB,SAASA,CAAA;IACP,IAAI,CAACpB,eAAe,GAAG,KAAK;IAC5BG,YAAY,CAACe,UAAU,CAAC,iBAAiB,CAAC;EAC5C;EAAC,QAAAG,CAAA,G;qBA3CUvB,WAAW;EAAA;EAAA,QAAAwB,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}