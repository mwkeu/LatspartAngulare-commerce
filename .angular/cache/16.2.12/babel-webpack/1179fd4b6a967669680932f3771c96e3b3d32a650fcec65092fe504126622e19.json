{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isAuthenticated = false;\n    this.registeredUsers = [];\n    // Daha önceki kayıtlı kullanıcıları getir\n    const storedUsers = localStorage.getItem('registeredUsers');\n    if (storedUsers) {\n      this.registeredUsers = JSON.parse(storedUsers);\n    }\n  }\n  login() {\n    this.isAuthenticated = true;\n    localStorage.setItem('isAuthenticated', 'true');\n  }\n  logout() {\n    this.isAuthenticated = false;\n    localStorage.removeItem('isAuthenticated');\n  }\n  isLoggedIn() {\n    return localStorage.getItem('isAuthenticated') == 'true';\n  }\n  resetAuth() {\n    localStorage.removeItem('isAuthenticated');\n  }\n  register(userName, email, password) {\n    const newUser = {\n      userName: userName,\n      email: email,\n      password: password\n    };\n    this.registeredUsers.push(newUser);\n    // Kayıtlı kullanıcıları localStorage'e kaydet\n    localStorage.setItem('registeredUsers', JSON.stringify(this.registeredUsers));\n  }\n  getRegisteredUsers() {\n    return this.registeredUsers;\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","isAuthenticated","registeredUsers","storedUsers","localStorage","getItem","JSON","parse","login","setItem","logout","removeItem","isLoggedIn","resetAuth","register","userName","email","password","newUser","push","stringify","getRegisteredUsers","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ayvaz\\OneDrive\\Masaüstü\\shoppingcartwithangularproject-main\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private registeredUsers: any[] = [];\r\n\r\n  constructor() {\r\n    // Daha önceki kayıtlı kullanıcıları getir\r\n    const storedUsers = localStorage.getItem('registeredUsers');\r\n    if (storedUsers) {\r\n       this.registeredUsers = JSON.parse(storedUsers);\r\n     }\r\n   }\r\n  login() {\r\n    this.isAuthenticated = true;\r\n    localStorage.setItem('isAuthenticated','true')\r\n  }\r\n  logout()\r\n  {\r\n    this.isAuthenticated = false;\r\n    localStorage.removeItem('isAuthenticated');\r\n  }\r\n  isLoggedIn(): boolean {\r\n   return localStorage.getItem('isAuthenticated') == 'true'\r\n  }\r\n    resetAuth():void{\r\n        localStorage.removeItem('isAuthenticated');\r\n    }\r\n\r\n   register(userName:string, email: string, password: string) {\r\n     \r\n      const newUser = {\r\n        userName: userName,\r\n        email: email,\r\n        password: password\r\n    };\r\n     this.registeredUsers.push(newUser);\r\n        \r\n    // Kayıtlı kullanıcıları localStorage'e kaydet\r\n    localStorage.setItem('registeredUsers', JSON.stringify(this.registeredUsers));\r\n  }\r\n   getRegisteredUsers():any[]{\r\n      return this.registeredUsers;\r\n   }\r\n}"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAItBC,YAAA;IAHQ,KAAAC,eAAe,GAAG,KAAK;IACvB,KAAAC,eAAe,GAAU,EAAE;IAGjC;IACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAC3D,IAAIF,WAAW,EAAE;MACd,IAAI,CAACD,eAAe,GAAGI,IAAI,CAACC,KAAK,CAACJ,WAAW,CAAC;;EAElD;EACDK,KAAKA,CAAA;IACH,IAAI,CAACP,eAAe,GAAG,IAAI;IAC3BG,YAAY,CAACK,OAAO,CAAC,iBAAiB,EAAC,MAAM,CAAC;EAChD;EACAC,MAAMA,CAAA;IAEJ,IAAI,CAACT,eAAe,GAAG,KAAK;IAC5BG,YAAY,CAACO,UAAU,CAAC,iBAAiB,CAAC;EAC5C;EACAC,UAAUA,CAAA;IACT,OAAOR,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,MAAM;EACzD;EACEQ,SAASA,CAAA;IACLT,YAAY,CAACO,UAAU,CAAC,iBAAiB,CAAC;EAC9C;EAEDG,QAAQA,CAACC,QAAe,EAAEC,KAAa,EAAEC,QAAgB;IAEtD,MAAMC,OAAO,GAAG;MACdH,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;KACb;IACA,IAAI,CAACf,eAAe,CAACiB,IAAI,CAACD,OAAO,CAAC;IAEnC;IACAd,YAAY,CAACK,OAAO,CAAC,iBAAiB,EAAEH,IAAI,CAACc,SAAS,CAAC,IAAI,CAAClB,eAAe,CAAC,CAAC;EAC/E;EACCmB,kBAAkBA,CAAA;IACf,OAAO,IAAI,CAACnB,eAAe;EAC9B;EAAC,QAAAoB,CAAA,G;qBAzCSvB,WAAW;EAAA;EAAA,QAAAwB,EAAA,G;WAAXxB,WAAW;IAAAyB,OAAA,EAAXzB,WAAW,CAAA0B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}